{"head":{"title":"How to setup statinamic"},"body":"<h2 id=\"install-from-npm\"><a class=\"markdownIt-Anchor\" href=\"#install-from-npm\">#</a> Install (from npm)</h2>\n<pre><code class=\"language-console\">$ npm <span class=\"hljs-operator\"><span class=\"hljs-keyword\">install</span>\n$ npm <span class=\"hljs-keyword\">install</span> <span class=\"hljs-comment\">--save-dev statinamic</span></span></code></pre>\n<p>Statinamic require some boilerplate, in order to provide you some flexibility.\nTo generate the default boilerplate, you can just run the following:</p>\n<pre><code class=\"language-console\"><span class=\"hljs-variable\">$ </span>statinamic setup</code></pre>\n<p>In order to benefit of hot-loading and visual javascript errors,\nyou can add this <code>babel</code> configuration</p>\n<pre><code class=\"language-json\">{\n  \"<span class=\"hljs-attribute\">stage</span>\": <span class=\"hljs-value\"><span class=\"hljs-number\">0</span></span>,\n  \"<span class=\"hljs-attribute\">env</span>\": <span class=\"hljs-value\">{\n    \"<span class=\"hljs-attribute\">development</span>\": <span class=\"hljs-value\">{\n      \"<span class=\"hljs-attribute\">plugins</span>\": <span class=\"hljs-value\">[ <span class=\"hljs-string\">\"react-transform\"</span> ]</span>,\n      \"<span class=\"hljs-attribute\">extra</span>\": <span class=\"hljs-value\">{\n        \"<span class=\"hljs-attribute\">react-transform</span>\": <span class=\"hljs-value\">{\n          \"<span class=\"hljs-attribute\">transforms</span>\": <span class=\"hljs-value\">[\n            {\n              \"<span class=\"hljs-attribute\">transform</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"react-transform-hmr\"</span></span>,\n              \"<span class=\"hljs-attribute\">imports</span>\": <span class=\"hljs-value\">[ <span class=\"hljs-string\">\"react\"</span> ]</span>,\n              \"<span class=\"hljs-attribute\">locals</span>\": <span class=\"hljs-value\">[ <span class=\"hljs-string\">\"module\"</span> ]\n            </span>},\n            {\n              \"<span class=\"hljs-attribute\">transform</span>\": <span class=\"hljs-value\"><span class=\"hljs-string\">\"react-transform-catch-errors\"</span></span>,\n              \"<span class=\"hljs-attribute\">imports</span>\": <span class=\"hljs-value\">[ <span class=\"hljs-string\">\"react\"</span>, <span class=\"hljs-string\">\"redbox-react\"</span> ]\n            </span>}\n          ]\n        </span>}\n      </span>}\n    </span>}\n  </span>}\n</span>}</code></pre>\n<p>You will need to install the appropriate packages</p>\n<pre><code class=\"language-console\">$ npm <span class=\"hljs-tag\">i</span> -D babel-plugin-react-<span class=\"hljs-attribute\">transform</span> react-<span class=\"hljs-attribute\">transform</span>-hmr react-<span class=\"hljs-attribute\">transform</span>-catch-errors redbox-react</code></pre>\n<hr>\n<h2 id=\"the-boilerplate\"><a class=\"markdownIt-Anchor\" href=\"#the-boilerplate\">#</a> The boilerplate</h2>\n<p>In order to get your engine ready, you need to:</p>\n<ul>\n<li>initialize your bundles\n(\n<a href=\"https://github.com/MoOx/statinamic/blob/master/demo/scripts/index-client.js\">client</a> +\n<a href=\"https://github.com/MoOx/statinamic/blob/master/demo/scripts/index-static.js\">static</a>\n) with:\n<ul>\n<li>your layout <a href=\"https://github.com/MoOx/statinamic/blob/master/demo/web_modules/app/pageComponents.js\">components</a></li>\n<li>some <a href=\"https://github.com/MoOx/statinamic/blob/master/demo/web_modules/app/routes.js\">routes</a></li>\n<li>a <a href=\"https://github.com/MoOx/statinamic/blob/master/demo/web_modules/app/store.js\">store</a> to keep data in memory</li>\n</ul>\n</li>\n<li>create your <a href=\"https://github.com/MoOx/statinamic/blob/master/demo/scripts/build.js\">build script</a> so you can:\n<ul>\n<li>define your configuration\n(eg: webpack loaders to add your favorite css preprocessor)</li>\n<li>run the dev server (<code>(babel-)node build --server --dev</code>)</li>\n<li>build the static version for production (<code>(babel-)node build --static --production</code>)</li>\n</ul>\n</li>\n</ul>\n<p>For that you will mainly need to:</p>\n<ul>\n<li>write or reuse <a href=\"http://react-components.com/\">React components</a>\n(you can get the <a href=\"https://github.com/MoOx/statinamic/tree/master/demo/web_modules\">components</a> of the demo)</li>\n<li>tweak <a href=\"http://webpack.github.io/docs\">webpack configuration</a> in the build script\nso you can consume images, svg, css or whatever you want.</li>\n</ul>\n<p>Check out the <a href=\"https://github.com/MoOx/statinamic/tree/master/demo\">demo source code</a>.</p>\n<hr>\n<h2 id=\"explanation-about-how-the-engine-works\"><a class=\"markdownIt-Anchor\" href=\"#explanation-about-how-the-engine-works\">#</a> Explanation about how the engine works</h2>\n<p>During the build process, markdown files are parsed, and transformed as JSON\nfiles (one part with the YAML header meta informations, one part with the body\nas HTML).\nSo both client and server can easily consume markdown files (as json) in order\nto render pages from React components. That’s it !</p>\n<p>On top of that you can add pretty much whatever you want to write styles the way\nyou like (CSS, inlines styles…) and you can even create your own pages from\nplain React components. This generator is just an helper.</p>\n<h3 id=\"packages-used\"><a class=\"markdownIt-Anchor\" href=\"#packages-used\">#</a> Packages used</h3>\n<ul>\n<li><a href=\"http://babeljs.io\">Babel</a>\nfor writing ES6 and ES7</li>\n<li><a href=\"http://webpack.github.io\">Webpack</a>\nfor bundling,</li>\n<li><a href=\"http://expressjs.com/\">Express</a> with some middlewares for development:\n<ul>\n<li><a href=\"http://webpack.github.io/docs/webpack-dev-server.html\">Webpack Dev Middleware</a>\nfor watching</li>\n<li><a href=\"https://github.com/glenjamin/webpack-hot-middleware\">Webpack Hot Middleware</a>\nfor hot reload</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/facebook/react\">React</a>\nfor writing UI</li>\n<li><a href=\"https://github.com/rackt/react-router\">React Router</a>\nfor routing</li>\n<li><a href=\"https://github.com/gaearon/redux\">Redux</a>\nfor handling application state\n(a better <a href=\"http://facebook.github.io/flux/\">Flux</a>implementation)</li>\n<li><a href=\"https://github.com/gaearon/redux-devtools\">Redux Dev Tools</a>\nfor awesome DX (developer experience).</li>\n<li><a href=\"https://github.com/nfl/react-helmet\">react-helmet</a>\nfor handling pages meta tags (title and meta…)</li>\n</ul>\n<h2 id=\"some-packages-that-might-helps\"><a class=\"markdownIt-Anchor\" href=\"#some-packages-that-might-helps\">#</a> Some packages that might helps</h2>\n<ul>\n<li><a href=\"https://github.com/gaearon/react-transform-hmr\">react-transform-hmr</a>\nfor hotloading during development and some others friends from\n<a href=\"https://github.com/gaearon/react-transform-boilerplate\">react-transform-boilerplate</a></li>\n<li><a href=\"https://github.com/substack/tape\">tape</a>\nfor unit tests.</li>\n</ul>\n<p><em>⚠︎ The packages above are used in the <a href=\"https://github.com/MoOx/statinamic/tree/master/demo\">demo</a>.</em></p>\n","rawBody":"\n## Install (from npm)\n\n```console\n$ npm install\n$ npm install --save-dev statinamic\n```\n\nStatinamic require some boilerplate, in order to provide you some flexibility.\nTo generate the default boilerplate, you can just run the following:\n\n```console\n$ statinamic setup\n```\n\nIn order to benefit of hot-loading and visual javascript errors,\nyou can add this `babel` configuration\n\n```json\n{\n  \"stage\": 0,\n  \"env\": {\n    \"development\": {\n      \"plugins\": [ \"react-transform\" ],\n      \"extra\": {\n        \"react-transform\": {\n          \"transforms\": [\n            {\n              \"transform\": \"react-transform-hmr\",\n              \"imports\": [ \"react\" ],\n              \"locals\": [ \"module\" ]\n            },\n            {\n              \"transform\": \"react-transform-catch-errors\",\n              \"imports\": [ \"react\", \"redbox-react\" ]\n            }\n          ]\n        }\n      }\n    }\n  }\n}\n```\n\nYou will need to install the appropriate packages\n\n```console\n$ npm i -D babel-plugin-react-transform react-transform-hmr react-transform-catch-errors redbox-react\n```\n\n---\n\n## The boilerplate\n\nIn order to get your engine ready, you need to:\n\n* initialize your bundles\n  (\n    [client](https://github.com/MoOx/statinamic/blob/master/demo/scripts/index-client.js) +\n    [static](https://github.com/MoOx/statinamic/blob/master/demo/scripts/index-static.js)\n  ) with:\n  - your layout [components](https://github.com/MoOx/statinamic/blob/master/demo/web_modules/app/pageComponents.js)\n  - some [routes](https://github.com/MoOx/statinamic/blob/master/demo/web_modules/app/routes.js)\n  - a [store](https://github.com/MoOx/statinamic/blob/master/demo/web_modules/app/store.js) to keep data in memory\n* create your [build script](https://github.com/MoOx/statinamic/blob/master/demo/scripts/build.js) so you can:\n  * define your configuration\n    (eg: webpack loaders to add your favorite css preprocessor)\n  * run the dev server (`(babel-)node build --server --dev`)\n  * build the static version for production (`(babel-)node build --static --production`)\n\nFor that you will mainly need to:\n\n* write or reuse [React components](http://react-components.com/)\n  (you can get the [components](https://github.com/MoOx/statinamic/tree/master/demo/web_modules) of the demo)\n* tweak [webpack configuration](http://webpack.github.io/docs) in the build script\n  so you can consume images, svg, css or whatever you want.\n\nCheck out the [demo source code](https://github.com/MoOx/statinamic/tree/master/demo).\n\n---\n\n## Explanation about how the engine works\n\nDuring the build process, markdown files are parsed, and transformed as JSON\nfiles (one part with the YAML header meta informations, one part with the body\nas HTML).\nSo both client and server can easily consume markdown files (as json) in order\nto render pages from React components. That's it !\n\nOn top of that you can add pretty much whatever you want to write styles the way\nyou like (CSS, inlines styles...) and you can even create your own pages from\nplain React components. This generator is just an helper.\n\n### Packages used\n\n* [Babel](http://babeljs.io)\n  for writing ES6 and ES7\n* [Webpack](http://webpack.github.io)\n  for bundling,\n* [Express](http://expressjs.com/) with some middlewares for development:\n  * [Webpack Dev Middleware](http://webpack.github.io/docs/webpack-dev-server.html)\n    for watching\n  * [Webpack Hot Middleware](https://github.com/glenjamin/webpack-hot-middleware)\n    for hot reload\n* [React](https://github.com/facebook/react)\n  for writing UI\n* [React Router](https://github.com/rackt/react-router)\n  for routing\n* [Redux](https://github.com/gaearon/redux)\n  for handling application state\n  (a better [Flux](http://facebook.github.io/flux/)implementation)\n* [Redux Dev Tools](https://github.com/gaearon/redux-devtools)\n  for awesome DX (developer experience).\n* [react-helmet](https://github.com/nfl/react-helmet)\n  for handling pages meta tags (title and meta...)\n\n## Some packages that might helps\n\n* [react-transform-hmr](https://github.com/gaearon/react-transform-hmr)\n  for hotloading during development and some others friends from\n  [react-transform-boilerplate](https://github.com/gaearon/react-transform-boilerplate)\n* [tape](https://github.com/substack/tape)\n  for unit tests.\n\n_⚠︎ The packages above are used in the [demo](https://github.com/MoOx/statinamic/tree/master/demo)._\n","raw":"---\ntitle: How to setup statinamic\n---\n\n## Install (from npm)\n\n```console\n$ npm install\n$ npm install --save-dev statinamic\n```\n\nStatinamic require some boilerplate, in order to provide you some flexibility.\nTo generate the default boilerplate, you can just run the following:\n\n```console\n$ statinamic setup\n```\n\nIn order to benefit of hot-loading and visual javascript errors,\nyou can add this `babel` configuration\n\n```json\n{\n  \"stage\": 0,\n  \"env\": {\n    \"development\": {\n      \"plugins\": [ \"react-transform\" ],\n      \"extra\": {\n        \"react-transform\": {\n          \"transforms\": [\n            {\n              \"transform\": \"react-transform-hmr\",\n              \"imports\": [ \"react\" ],\n              \"locals\": [ \"module\" ]\n            },\n            {\n              \"transform\": \"react-transform-catch-errors\",\n              \"imports\": [ \"react\", \"redbox-react\" ]\n            }\n          ]\n        }\n      }\n    }\n  }\n}\n```\n\nYou will need to install the appropriate packages\n\n```console\n$ npm i -D babel-plugin-react-transform react-transform-hmr react-transform-catch-errors redbox-react\n```\n\n---\n\n## The boilerplate\n\nIn order to get your engine ready, you need to:\n\n* initialize your bundles\n  (\n    [client](https://github.com/MoOx/statinamic/blob/master/demo/scripts/index-client.js) +\n    [static](https://github.com/MoOx/statinamic/blob/master/demo/scripts/index-static.js)\n  ) with:\n  - your layout [components](https://github.com/MoOx/statinamic/blob/master/demo/web_modules/app/pageComponents.js)\n  - some [routes](https://github.com/MoOx/statinamic/blob/master/demo/web_modules/app/routes.js)\n  - a [store](https://github.com/MoOx/statinamic/blob/master/demo/web_modules/app/store.js) to keep data in memory\n* create your [build script](https://github.com/MoOx/statinamic/blob/master/demo/scripts/build.js) so you can:\n  * define your configuration\n    (eg: webpack loaders to add your favorite css preprocessor)\n  * run the dev server (`(babel-)node build --server --dev`)\n  * build the static version for production (`(babel-)node build --static --production`)\n\nFor that you will mainly need to:\n\n* write or reuse [React components](http://react-components.com/)\n  (you can get the [components](https://github.com/MoOx/statinamic/tree/master/demo/web_modules) of the demo)\n* tweak [webpack configuration](http://webpack.github.io/docs) in the build script\n  so you can consume images, svg, css or whatever you want.\n\nCheck out the [demo source code](https://github.com/MoOx/statinamic/tree/master/demo).\n\n---\n\n## Explanation about how the engine works\n\nDuring the build process, markdown files are parsed, and transformed as JSON\nfiles (one part with the YAML header meta informations, one part with the body\nas HTML).\nSo both client and server can easily consume markdown files (as json) in order\nto render pages from React components. That's it !\n\nOn top of that you can add pretty much whatever you want to write styles the way\nyou like (CSS, inlines styles...) and you can even create your own pages from\nplain React components. This generator is just an helper.\n\n### Packages used\n\n* [Babel](http://babeljs.io)\n  for writing ES6 and ES7\n* [Webpack](http://webpack.github.io)\n  for bundling,\n* [Express](http://expressjs.com/) with some middlewares for development:\n  * [Webpack Dev Middleware](http://webpack.github.io/docs/webpack-dev-server.html)\n    for watching\n  * [Webpack Hot Middleware](https://github.com/glenjamin/webpack-hot-middleware)\n    for hot reload\n* [React](https://github.com/facebook/react)\n  for writing UI\n* [React Router](https://github.com/rackt/react-router)\n  for routing\n* [Redux](https://github.com/gaearon/redux)\n  for handling application state\n  (a better [Flux](http://facebook.github.io/flux/)implementation)\n* [Redux Dev Tools](https://github.com/gaearon/redux-devtools)\n  for awesome DX (developer experience).\n* [react-helmet](https://github.com/nfl/react-helmet)\n  for handling pages meta tags (title and meta...)\n\n## Some packages that might helps\n\n* [react-transform-hmr](https://github.com/gaearon/react-transform-hmr)\n  for hotloading during development and some others friends from\n  [react-transform-boilerplate](https://github.com/gaearon/react-transform-boilerplate)\n* [tape](https://github.com/substack/tape)\n  for unit tests.\n\n_⚠︎ The packages above are used in the [demo](https://github.com/MoOx/statinamic/tree/master/demo)._\n","__filename":"docs/setup.md","__url":"/statinamic/docs/setup/"}